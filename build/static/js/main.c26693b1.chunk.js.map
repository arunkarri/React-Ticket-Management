{"version":3,"sources":["env.js","Tickets.js","App.js","index.js"],"names":["host","Tickets","React","useState","tickets","updateTickets","show","setShow","title","setTitle","description","setDesc","shouldLoad","setLoad","getTickets","fetch","env","then","res","json","data","useEffect","className","type","placeholder","value","onChange","event","target","onClick","obj","id","length","console","log","method","headers","Accept","body","JSON","stringify","role","scope","map","ele","index","dataIndex","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c26693b1.chunk.js","sourcesContent":["const host = 'https://601820f5971d850017a3f941.mockapi.io/api/';\n\nexport default host;","import React from 'react';\nimport env from './env';\n\nconst Tickets = () => {\n  const [tickets, updateTickets] = React.useState([]);\n  const [show, setShow] = React.useState(0);\n  const [title, setTitle] = React.useState('');\n  const [description, setDesc] = React.useState('');\n  const [shouldLoad, setLoad] = React.useState(false);\n\n  function getTickets() {\n    setLoad(true);\n    fetch(`${env}tickets`)\n      .then((res) => res.json())\n      .then((data) => {\n        setLoad(false);\n        updateTickets(data);\n      });\n  }\n\n  React.useEffect(() => {\n    getTickets();\n  }, []);\n\n  const submitQuery = () => {\n    setLoad(true);\n    let obj = { title, description, id: tickets[tickets.length - 1]['id'] + 1 };\n    console.log(obj.id);\n    fetch(`${env}tickets`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(obj),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoad(false);\n        setTitle('');\n        setDesc('');\n        getTickets();\n      });\n  };\n  const editRecord = (obj, id) => {\n    setLoad(true);\n    setShow(0);\n    fetch(`${env}tickets/${id}`, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(obj),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoad(false);\n        updateTickets(tickets.map((ele) => (ele.id === id ? { ...ele } : ele)));\n      });\n  };\n\n  const deleteRecord = (id) => {\n    setLoad(true);\n    fetch(`${env}tickets/${id}`, {\n      method: 'DELETE',\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoad(false);\n        updateTickets(tickets.filter((ele) => ele.id !== id));\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-5 col-xl-5 col-sm-6 col-md-6 col-xs-12\">\n          <input type=\"text\" className=\"form-control\" placeholder=\"Enter a title\" value={title} onChange={(event) => setTitle(event.target.value)} />\n        </div>\n        <div className=\"col-lg-5 col-xl-5 col-sm-6 col-md-6 col-xs-12\">\n          <input type=\"text\" className=\"form-control\" placeholder=\"Enter a description\" value={description} onChange={(event) => setDesc(event.target.value)} />\n        </div>\n        <br />\n        <br />\n        <div className=\"col-lg-2 col-xl-2 col-sm-6 col-md-6 col-xs-12\">\n          <button type=\"button\" className=\"ml-auto btn btn-primary\" onClick={submitQuery}>\n            <i className=\"fas fa-plus\"></i> New Query\n          </button>\n        </div>\n      </div>\n      {shouldLoad === true ? (\n        <div className=\"d-flex spinner-border text-success\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      ) : (\n        ''\n      )}\n      <table className=\"table table-responsive\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Ticket ID</th>\n            <th scope=\"col\">Title</th>\n            <th scope=\"col\">Description</th>\n            <th scope=\"col\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tickets.map((ele, index) => {\n            return (\n              <tr key={index}>\n                <td>{ele.id}</td>\n                <td>\n                  {show === ele.id ? (\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Enter query title\"\n                      value={ele.title}\n                      onChange={(event) => updateTickets(tickets.map((data, dataIndex) => (dataIndex === index ? { ...data, title: event.target.value } : data)))}\n                    />\n                  ) : (\n                    ele.title\n                  )}\n                </td>\n                <td>\n                  {show === ele.id ? (\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Enter query description\"\n                      value={ele.description}\n                      onChange={(event) => updateTickets(tickets.map((data, dataIndex) => (dataIndex === index ? { ...data, description: event.target.value } : data)))}\n                    />\n                  ) : (\n                    ele.description\n                  )}\n                </td>\n                <td>\n                  <span>\n                    {show !== ele.id ? <i className=\"fas fa-pen text-primary pointer\" onClick={() => setShow(ele.id)}></i> : <i className=\"fas fa-check-circle text-success pointer\" onClick={() => editRecord(ele, ele.id)}></i>}&nbsp;&nbsp;\n                    <i className=\"fas fa-trash text-danger pointer\" onClick={() => deleteRecord(ele.id)}></i>\n                  </span>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Tickets;\n","import Tickets from './Tickets';\n\nfunction App() {\n  return <div><Tickets /></div>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}